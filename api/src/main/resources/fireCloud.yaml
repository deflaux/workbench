# A subset of the FireCloud API spec that we use to generate Java client libraries. The
# original API spec can be found here:
# https://github.com/broadinstitute/firecloud-orchestration/blob/develop/src/main/resources/swagger/api-docs.yaml
# WorkspaceResponse and its children are not in the current FC API spec and can be found in the
# Rawls spec here:
# https://github.com/broadinstitute/rawls/blob/develop/core/src/main/resources/swagger/rawls.yaml#L5034

swagger: '2.0'

info:
  title: FireCloud
  description: |
    Genome analysis execution service.
  version: "0.1"
  license:
    name: BSD
    url: http://opensource.org/licenses/BSD-3-Clause
  termsOfService: https://github.com/broadinstitute/firecloud-orchestration

host: "api.firecloud.org"
schemes:
  - "https"
basePath: /

produces:
  - application/json

security:
  - googleoauth:
      - openid
      - email
      - profile
      - https://www.googleapis.com/auth/devstorage.full_control

securityDefinitions:
  googleoauth:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
      email: email authorization
      profile: profile authorization
      https://www.googleapis.com/auth/devstorage.full_control: GCS storage
      https://www.googleapis.com/auth/cloud-billing: GCS billing

##########################################################################################
## PATHS
##########################################################################################
paths:
  /status:
    get:
      operationId: status
      tags:
        - status
      summary: |
        An orchestrated status check for underlying systems: Agora, Thurloe, Elasticsearch, Rawls
      responses:
        200:
          description: All systems OK.
          schema:
            $ref: '#/definitions/SystemStatus'
        500:
          description: Problem with one or more systems. See response for details.
          schema:
            $ref: '#/definitions/SystemStatus'
      security: []
  /api/billing:
    post:
      responses:
        204:
          description: Successfully Created Billing Project in FireCloud and Google
        400:
          description: FireCloud billing user must be an admin of the billing account
          schema:
            $ref: '#/definitions/ErrorReport'
        403:
          description: You must be an admin of the google billing account
          schema:
            $ref: '#/definitions/ErrorReport'
        409:
          description: project already exists in FireCloud or google
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: body
          description: create project request
          name: createProjectRequest
          required: true
          schema:
            $ref: '#/definitions/CreateRawlsBillingProjectFullRequest'
      tags:
        - Billing
      consumes:
        - application/json
      summary: create billing project in FireCloud and google
      operationId: createBillingProjectFull
      security:
        - googleoauth:
          - openid
          - email
          - profile
          - https://www.googleapis.com/auth/cloud-billing

  /api/billing/{projectId}/{role}/{email}:
      put:
        responses:
          200:
            description: Successfully Added User To Billing Project
          403:
            description: You must be a project owner to add a user to a billing project
            schema:
              $ref: '#/definitions/ErrorReport'
          404:
            description: User not found
            schema:
              $ref: '#/definitions/ErrorReport'
          500:
            description: FireCloud Internal Error
            schema:
              $ref: '#/definitions/ErrorReport'
        parameters:
          - in: path
            description: Project ID
            name: projectId
            required: true
            type: string
          - in: path
            description: role of user for project
            name: role
            required: true
            type: string
            enum: ["user", "owner"]
          - in: path
            description: email of user or group to add
            name: email
            required: true
            type: string
        tags:
          - Billing
        consumes:
          - application/json
        summary: add user to billing project the caller owns
        operationId: addUserToBillingProject
        security:
          - googleoauth:
              - openid
              - email
              - profile
      delete:
        responses:
          '200':
            description: Successfully Removed User From Billing Project
          '403':
            description: You must be a project owner to add a user to a billing project
            schema:
              $ref: '#/definitions/ErrorReport'
          '404':
            description: User not found
            schema:
              $ref: '#/definitions/ErrorReport'
          '500':
            description: Rawls Internal Error
            schema:
              $ref: '#/definitions/ErrorReport'
        description: remove user or group from billing project the caller owns
        parameters:
          - in: path
            description: Project ID
            name: projectId
            required: true
            type: string
          - in: path
            description: role of user for project
            name: workbenchRole
            required: true
            type: string
            enum: ["user", "owner"]
          - in: path
            description: email of user or group to remove
            name: email
            required: true
            type: string
        tags:
          - billing
        summary: remove user or group from billing project the caller owns
        operationId: removeUserFromBillingProject
        security:
          - authorization:
              - openid
              - email
              - profile

  /api/billing/{projectId}/googleRole/{role}/{email}:
    put:
      responses:
        200:
          description: Successfully Granted Google Role to User
        403:
          description: You must be a project owner granting a role on the whitelist
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: google role of user for project
          name: role
          required: true
          type: string
        - in: path
          description: email of user
          name: email
          required: true
          type: string
      tags:
        - Billing
      consumes:
        - application/json
      summary: grant a google role to a user and their pet in the billing project the caller owns
      operationId: grantGoogleRoleToUser
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/profile/billing:
    get:
      tags:
        - Profile
      operationId: billing
      summary: List billing projects for a user
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingProjectMembership'
        404:
          description: User Not Found
        500:
          description: Internal Server Error

  /api/workspaces:
    get:
      tags:
      - Workspaces
      operationId: listWorkspaces
      summary: |
        Lists workspaces.
      produces:
        - application/json
        - text/plain
      responses:
        200:
          description: List of workspaces.
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceResponse'
    post:
      tags:
        - Workspaces
      consumes:
        - application/json
      operationId: createWorkspace
      summary: Create workspace
      parameters:
        - name: workspace
          description: New workspace information
          required: true
          in: body
          schema:
            type: object
            $ref: '#/definitions/WorkspaceIngest'
      responses:
        200:
          description: No response was specified
        201:
          description: Successful Request
          schema:
            $ref: '#/definitions/Workspace'
        403:
          description: Unable to create bucket for workspace
        409:
          description: Workspace by that name already exists
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}:
    get:
      tags:
        - Workspaces
      operationId: getWorkspace
      summary: Get workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceResponse'
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error
    delete:
      tags:
        - Workspaces
      operationId: deleteWorkspace
      summary: Delete workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        202:
          description: Request Accepted
        403:
          description: User does not have correct permissions to delete a published workspace
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/acl:
    patch:
      tags:
        - Workspaces
      consumes:
        - application/json
      operationId: updateWorkspaceACL
      summary: Update workspace ACL
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: query
          description: true to invite unregistered users, false to ignore
          name: inviteUsersNotFound
          required: true
          default: false
          type: boolean
        - name: aclUpdates
          description: Series of ACL updates for workspace
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceACLUpdate'
          in: body
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceACLUpdateResponseList'
        400:
          description: Can't set ACL for workspace
        404:
          description: Workspace not found
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/clone:
    post:
      tags:
        - Workspaces
      consumes:
        - application/json
      operationId: cloneWorkspace
      summary: Clone Workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: workspace
          description: Cloned workspace information
          required: true
          in: body
          schema:
            $ref: '#/definitions/WorkspaceIngest'
      responses:
        201:
          description: Successful Request
        400:
          description: Unable to create resources for workspace
        404:
          description: Source workspace not found
        409:
          description: Destination workspace already exists
        500:
          description: Internal Server Error

  /me:
    get:
      tags:
        - Profile
      operationId: me
      summary: Returns registration and activation status for the current user
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Me'
        401:
          description: Unauthorized. User is not allowed in FireCloud or has not signed in.
        403:
          description: Forbidden. User is registered in FireCloud, but not activated.
        404:
          description: Not Found. User is authenticated to Google but not a FireCloud member.
        500:
          description: Internal Server Error determining user status.
        503:
          description: Service Unavailable. Could not reach underlying services to determine user status.

  /register/profile:
      post:
        tags:
          - Profile
        consumes:
          - application/json
        operationId: setProfile
        summary: Sets a profile object in the user profile service for the currently logged-in user.
        parameters:
        - name: profile
          description: A complete profile
          in: body
          schema:
            $ref: '#/definitions/Profile'
        responses:
          200:
            description: OK
          400:
            description: Bad request
          500:
            description: Internal server error

  /api/groups:
      get:
        responses:
          200:
            description: Successfully listed group membership
            schema:
              type: array
              items:
                $ref: '#/definitions/ManagedGroupAccessResponse'
          500:
            description: FireCloud Internal Error
            schema:
              $ref: '#/definitions/ErrorReport'
        tags:
          - Groups
        summary: get the list of the groups that the caller is a member of
        operationId: getGroups
        security:
          - googleoauth:
            - openid
            - email
            - profile

  /api/groups/{groupName}:
    post:
      responses:
        201:
          description: Successfully created group
          schema:
            $ref: '#/definitions/ManagedGroupWithMembers'
        409:
          description: Group already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - Groups
      consumes:
        - application/json
      summary: create a new group
      operationId: createGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/groups/{groupName}/{role}/{email}:
    put:
      responses:
        204:
          description: Successfully Added User To Group
        403:
          description: You must be an admin of this group in order to add members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
        - in: path
          description: role of user for group
          name: role
          required: true
          type: string
          enum: ["member", "admin"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - Groups
      consumes:
        - application/json
      summary: add a user to a group the caller owns
      operationId: addUserToGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile
    delete:
      responses:
        204:
          description: Successfully Removed User From Group
        403:
          description: You must be an admin of this group in order to remove members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
        - in: path
          description: role of user for group
          name: role
          required: true
          type: string
          enum: ["member", "admin"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - Groups
      summary: remove a user from a group the caller owns
      operationId: removeUserFromGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile


##########################################################################################
## PARAMETERS
##########################################################################################
parameters:
  workspaceNamespaceParam:
    name: workspaceNamespace
    description: Workspace Namespace
    required: true
    type: string
    in: path
  workspaceNameParam:
    name: workspaceName
    description: Workspace Name
    required: true
    type: string
    in: path

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:

  BillingProjectMembership:
    description: ''
    required:
      - projectName
      - role
      - status
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project to create
      role:
        type: string
        description: the role of the current user in the project
      creationStatus:
        type: string
        enum: ["Creating", "Ready", "Error"]

  CreateRawlsBillingProjectFullRequest:
    description: ''
    required:
      - projectName
      - billingAccount
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project to create
      billingAccount:
        type: string
        description: the id of the billing account to use, must start with 'billingAccounts/'

  Enabled:
    type: object
    properties:
      google:
        type: boolean
        description: User enabled via Google?
      ldap:
        type: boolean
        description: User enabled in LDAP?
      allUsersGroup:
        type: boolean
        description: User is a member of the "All Users" group?

  ErrorReport:
    description: ''
    required:
      - source
      - message
      - causes
      - stackTrace
    type: object
    properties:
      source:
        type: string
        description: service causing error
      message:
        type: string
        description: what went wrong
      statusCode:
        type: integer
        description: HTTP status code
      causes:
        type: array
        description: errors triggering this one
        items:
          $ref: '#/definitions/ErrorReport'
      stackTrace:
        type: array
        description: stack trace
        items:
          $ref: '#/definitions/StackTraceElement'

  ManagedGroupRef:
    description: a reference to a group that can be managed by users
    type: object
    required:
      - membersGroupName
    properties:
      membersGroupName:
        type: string

  Me:
    type: object
    properties:
      userInfo:
        $ref: '#/definitions/UserInfo'
      enabled:
        $ref: '#/definitions/Enabled'

  Profile:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        title:
          type: string
          description: User's title
        contactEmail:
          type: string
          description: User's contact email (if different from account email)
        institute:
          type: string
          description: User's home institution
        institutionalProgram:
          type: string
          description: User's institutional program
        programLocationCity:
          type: string
          description: User's program location city
        programLocationState:
          type: string
          description: User's program location state
        programLocationCountry:
          type: string
          description: User's program location country
        pi:
          type: string
          description: Principal Investigator
        nonProfitStatus:
          type: string
          description: User's program non-profit status
      required:
        - firstName
        - lastName
        - title
        - institute
        - institutionalProgram
        - programLocationCity
        - programLocationState
        - programLocationCountry
        - pi
        - nonProfitStatus

  StackTraceElement:
      description: ''
      required:
        - className
        - methodName
        - fileName
        - lineNumber
      type: object
      properties:
        className:
          type: string
          description: class name
        methodName:
          type: string
          description: method name
        fileName:
          type: string
          description: source file name
        lineNumber:
          type: integer
          description: line number

  UserInfo:
    type: object
    properties:
      userSubjectId:
        type: string
        description: Subject ID (from Google)
      userEmail:
        type: string
        description: User's email

  Workspace:
    description: ''
    required:
      - namespace
      - name
      - workspaceId
      - authorizationDomain
      - bucketName
      - createdDate
      - lastModified
      - createdBy
      - attributes
      - accessLevels
      - authDomainACLs
      - isLocked
    type: object
    properties:
      namespace:
        type: string
        description: The namespace the workspace belongs to
      name:
        type: string
        description: The name of the workspace
      authorizationDomain:
        type: array
        items:
          $ref: '#/definitions/ManagedGroupRef'
        description: The list of groups to form the Authorization Domain (empty if no Authorization Domain is set)
      workspaceId:
        type: string
        description: A UUID associated with the workspace
      bucketName:
        type: string
        description: The name of the bucket associated with the workspace
      createdDate:
        type: string
        format: date-time
        description: 'The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ format'
      lastModified:
        type: string
        format: date-time
        description: 'The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ format'
      createdBy:
        type: string
        description: The user who created the workspace
      attributes:
        type: object
        description: Map[String, Attribute]
      accessLevels:
        type: object
        description: Map[String, RawlsGroupRef]
      authDomainACLs:
         type: object
         description: Map[String, RawlsGroupRef]
      isLocked:
        type: boolean
        description: Can the Workspace currently be modified?

  WorkspaceAccessLevel:
    description: 'The level of access a user or group has on a Workspace. NoAccess, Read, Write, Owner, ProjectOwner'
    properties:
      name:
        type: string
        description: Workspace Access Level

  WorkspaceIngest:
    required:
      - namespace
      - name
      - attributes
    type: object
    properties:
      namespace:
        type: string
        description: New workspace namespace
      name:
        type: string
        description: New workspace name
      attributes:
        type: object
        additionalProperties:
          type: string
        description: Map of attributes
      authorizationDomain:
        type: array
        items:
          $ref: '#/definitions/ManagedGroupRef'
        description: The list of groups to form the Authorization Domain (empty if no Authorization Domain is set)

  WorkspaceResponse:
    description: ''
    properties:
      accessLevel:
        type: string
      canShare:
        type: boolean
      catalog:
        type: boolean
      workspace:
        $ref: '#/definitions/Workspace'
      workspaceSubmissionStats:
        $ref: '#/definitions/WorkspaceSubmissionStats'
      owners:
        type: array
        items:
          type: string

  WorkspaceSubmissionStats:
    description: Statistics about submissions in a workspace
    required:
      - runningSubmissionsCount
    properties:
      lastSuccessDate:
        type: string
        format: date-time
        description: The date of the last successful submission
      lastFailureDate:
        type: string
        format: date-time
        description: The date of the last failed submission
      runningSubmissionsCount:
        type: integer
        description: Count of all the running submissions
  WorkspaceACLUpdate:
    description: ''
    required:
      - email
      - accessLevel
    type: object
    properties:
      email:
        type: string
        description: email address of the user or group whose permissions will be changed
      accessLevel:
        type: string
        description: The access level to grant to this user or group (OWNER, READER, WRITER, NO ACCESS)
      canShare:
        type: boolean
        description: Set to true if you want this user to be able to share the workspace with other users, only meaningful for readers and writers, default false
      canCompute:
        type: boolean
        description: Set to true if you want this user to be able to launch compute in this workspace, may not be true for readers, default false for reader, true otherwise
  WorkspaceACLUpdateResponse:
    description: ''
    required:
      - subjectId
      - accessLevel
    type: object
    properties:
      subjectId:
        type: string
        description: id of the user or group whose permissions will be changed
      accessLevel:
        type: string
        description: The access level granted to this user or group (OWNER, READER, WRITER, NO ACCESS)

  WorkspaceACLUpdateResponseList:
    description: ''
    required:
      - usersUpdated
      - invitesSent
      - invitesUpdated
      - usersNotFound
    type: object
    properties:
      usersUpdated:
        type: array
        description: the users or groups who were updated
        items:
          $ref: '#/definitions/WorkspaceACLUpdateResponse'
      invitesSent:
        type: array
        description: the list of invites that were sent
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      invitesUpdated:
        type: array
        description: the list of invites that were updated
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      usersNotFound:
        type: array
        description: the users or groups who were not found
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'

  ManagedGroupAccessResponse:
    description: an element of a list of groups a user has access to
    type: object
    required:
      - groupName
      - groupEmail
      - role
    properties:
      groupName:
        type: string
      groupEmail:
        type: string
      role:
        type: string

  ManagedGroupWithMembers:
    description: a group with all of its members
    type: object
    required:
      - membersGroup
      - adminsGroup
      - membersEmails
      - adminsEmails
    properties:
      membersGroup:
        $ref: '#/definitions/RawlsGroupShort'
      adminsGroup:
        $ref: '#/definitions/RawlsGroupShort'
      membersEmails:
        type: array
        items:
          type: string
      adminsEmails:
        type: array
        items:
          type: string

  RawlsGroupShort:
    type: object
    description: a reference to a group
    properties:
      groupName:
        type: string
        description: 'the name of the group'
      groupEmail:
        type: string
        description: 'the email associated with the group'

  SystemStatus:
    description: report status of systems Orchestration calls out to
    type: object
    required:
      - ok
      - systems
    properties:
      ok:
        type: boolean
        description: whether any system(s) need attention
        example: false
      systems:
        type: object
        description: Map[String, SubsystemStatus]
        example:
          Agora:
            ok: true
          Google:
            ok: true
          Consent:
            ok: false
            messages:
              - "ClusterHealth is RED"
          Rawls:
            ok: true
          Ontology:
            ok: true
          Search:
            ok: true
          Thurloe:
            ok: false
            messages:
              - "Thurloe misbehavior message"
